#Design a scrapper for both Worldwide and Indian data
#information used as ? https://www.worldometers.info/coronavirus/

import pandas as pd
import numpy as np
from urllib.request import Request, urlopen
from bs4 import BeautifulSoup

#request by sending a HTTP indicating the request was being sent from the Firefox web browser.(was getting 403 error)

url = "https://www.worldometers.info/coronavirus/"
req = Request(url, headers={'User-Agent': 'Mozilla/5.0'})
webpage = urlopen(req).read()

soup = BeautifulSoup(webpage, "html.parser")
# need to check error in below code
#soup = BeautifulSoup(webpage, 'lxml')

#get title
title = soup.title
print(title)
#print(soup.prettify())

#divs=soup.find("div", class_="panel_flip")
#for i in divs.find_all("div", class_="panel_front"):
#        print(i.text)
#Get tables

table = soup.find_all('table')
table = table[0]
#outer loop iterates over all the table rows (tr), and the inner loop iterates over all the cells 
#(including both the header cells and the standard cells). 
#For each cell, ‘cell.text’ extracts the content of the table cell.
tab_data = [[cell.text for cell in row.find_all(["th","td"])]
                        for row in table.find_all("tr")]
df = pd.DataFrame(tab_data)

new_header = df.iloc[0] 
df.drop(df.index[0],inplace =True)
df = df.reset_index(drop=True)
df.columns = new_header 
df.drop(df.index[range(222, 230)], axis=0, inplace=True)

df1 = df.replace(r'^\s*$', np.nan, regex=True)

#dropping row if country is null
df = df1.dropna(how='any', subset=['Country,Other'])
df = df.drop(columns="Continent")

df = df.reset_index(drop=True)
df.replace(r'^N/A',np.nan,regex=True,inplace=True)
df.replace(np.nan,0,inplace =True)
df =df.astype('str')
for col in df.columns.values:
    if col != 'Country,Other':
       df[col] = df[col].str.replace('+', '').str.replace(',', '').str.replace('N\A', '0')
#       df[col] = df[col].astype(int)
    else :
       df[col] = df[col].str.replace('\n', '')
       
print(df.head(3))

#print(df[['Country,Other','NewCases']])
 
    
      
     



